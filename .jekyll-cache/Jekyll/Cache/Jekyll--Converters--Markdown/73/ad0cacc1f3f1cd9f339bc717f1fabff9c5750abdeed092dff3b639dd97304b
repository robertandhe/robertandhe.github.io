I"U+<h1 id="问题描述">问题描述</h1>
<p>Given <code class="highlighter-rouge">N</code>, consider a convex N-sided polygon with vertices labelled <code class="highlighter-rouge">A[0], A[i], ..., A[N-1]</code> in clockwise order.</p>

<p>Suppose you triangulate the polygon into <code class="highlighter-rouge">N-2</code> triangles.  For each triangle, the value of that triangle is the <strong>product</strong> of the labels of the vertices, and the total score of the triangulation is the sum of these values over all <code class="highlighter-rouge">N-2</code> triangles in the triangulation.</p>

<p>Return the smallest possible total score that you can achieve with some triangulation of the polygon.</p>

<h3 id="example-1">Example 1:</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nl">Input:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
<span class="n">Output</span><span class="o">:</span> <span class="mi">6</span>
<span class="n">Explanation</span><span class="o">:</span> <span class="n">The</span> <span class="n">polygon</span> <span class="n">is</span> <span class="n">already</span> <span class="n">triangulated</span><span class="p">,</span> <span class="n">and</span> <span class="n">the</span> <span class="n">score</span> <span class="n">of</span> <span class="n">the</span> <span class="n">only</span> <span class="n">triangle</span> <span class="n">is</span> <span class="mf">6.</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="example-2">Example 2:</h3>
<p><img src="https://raw.githubusercontent.com/robertandhe/MarkDownPhotos/master/2019-12-04/leetcode1039.PNG" alt="leetcode-1039" /></p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nl">Input:</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
<span class="n">Output</span><span class="o">:</span> <span class="mi">144</span>
<span class="n">Explanation</span><span class="o">:</span> <span class="n">There</span> <span class="n">are</span> <span class="n">two</span> <span class="n">triangulations</span><span class="p">,</span> <span class="n">with</span> <span class="n">possible</span> <span class="n">scores</span><span class="o">:</span> <span class="mi">3</span><span class="o">*</span><span class="mi">7</span><span class="o">*</span><span class="mi">5</span> <span class="o">+</span> <span class="mi">4</span><span class="o">*</span><span class="mi">5</span><span class="o">*</span><span class="mi">7</span> <span class="o">=</span> <span class="mi">245</span><span class="p">,</span> <span class="n">or</span> <span class="mi">3</span><span class="o">*</span><span class="mi">4</span><span class="o">*</span><span class="mi">5</span> <span class="o">+</span> <span class="mi">3</span><span class="o">*</span><span class="mi">4</span><span class="o">*</span><span class="mi">7</span> <span class="o">=</span> <span class="mf">144.</span>  <span class="n">The</span> <span class="n">minimum</span> <span class="n">score</span> <span class="n">is</span> <span class="mf">144.</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="example-3">Example 3:</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nl">Input:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
<span class="n">Output</span><span class="o">:</span> <span class="mi">13</span>
<span class="n">Explanation</span><span class="o">:</span> <span class="n">The</span> <span class="n">minimum</span> <span class="n">score</span> <span class="n">triangulation</span> <span class="n">has</span> <span class="n">score</span> <span class="mi">1</span><span class="o">*</span><span class="mi">1</span><span class="o">*</span><span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="o">*</span><span class="mi">1</span><span class="o">*</span><span class="mi">4</span> <span class="o">+</span> <span class="mi">1</span><span class="o">*</span><span class="mi">1</span><span class="o">*</span><span class="mi">5</span> <span class="o">+</span> <span class="mi">1</span><span class="o">*</span><span class="mi">1</span><span class="o">*</span><span class="mi">1</span> <span class="o">=</span> <span class="mf">13.</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="note">Note:</h3>
<ol>
  <li><code class="highlighter-rouge">3 &lt;= A.length &lt;= 50</code></li>
  <li><code class="highlighter-rouge">1 &lt;= A[i] &lt;= 100</code></li>
</ol>

<h1 id="解法">解法</h1>
<p> 这道题给出一多边形顶点上的数值，在多边形中划分三角形，问划分出的三角形顶点积的和的最小值。 
 题目中也给出了提示，对N个顶点划分三角形时，A[0]和A[N - 1]肯定是共同在某一些三角形内，至于另一个顶点是哪个就需要遍历[1, N - 2]中所有顶点。设另一个顶点为第k个，那么A[0], A[N - 1], A[k]组成一个三角形，另外两块区分就是动态规划子问题。<br />
 这里设动态数组dp[i][j]表示第i个到第j个顶点划分出的最小值。dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j] + A[i] * A[j] * A[k]),其中k遍历范围为[i + 1, j - 1]。<br />
 只有三个以上顶点才构成多边形，i,j的差值从2逐渐增大到n - 2，遍历所有情况。返回值为dp[0][n-1]。</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="nf">minScoreTriangulation</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">A</span><span class="p">)</span> 
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">A</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">dp</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">n</span><span class="p">));</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">d</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">d</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">+</span> <span class="n">d</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">d</span><span class="p">;</span>
			<span class="kt">int</span> <span class="n">mn</span> <span class="o">=</span> <span class="n">INT_MAX</span><span class="p">;</span>
			<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">j</span><span class="p">;</span> <span class="o">++</span><span class="n">k</span><span class="p">)</span>
				<span class="n">mn</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">mn</span><span class="p">,</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">+</span> <span class="n">dp</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="n">A</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">*</span> <span class="n">A</span><span class="p">[</span><span class="n">k</span><span class="p">]);</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">mn</span> <span class="o">!=</span> <span class="n">INT_MAX</span><span class="p">)</span>
				<span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">mn</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>time complexity: O(n^3)<br />
space complexity: O(n^2)<br />
runtime: 97.44%<br />
memory usage: 100.00%</p>

<h1 id="link">Link</h1>
<p><a href="https://leetcode.com/problems/minimum-score-triangulation-of-polygon/">leetcode-1039</a><br />
<a href="http://www.noteanddata.com/leetcode-1039-Minimum-Score-Triangulation-of-Polygon-java-solution-note.html">solution</a></p>
:ET