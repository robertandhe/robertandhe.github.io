I"dS<h2 id="设种子">设种子</h2>
<p>种子保证了实验结果的可重复性，便于前后比较</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">seed_everything</span><span class="p">(</span><span class="n">seed</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
    <span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="n">seed</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">'PYTHONHASHSEED'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">seed</span><span class="p">)</span>
    <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="n">seed</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="数据压缩">数据压缩</h2>
<p>数据压缩能缩小数据占用空间，加快运行速度，常用的一个函数如下：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">reduce_memory_usage</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
<span class="n">numerics</span> <span class="o">=</span> <span class="p">[</span><span class="s">'int16'</span><span class="p">,</span> <span class="s">'int32'</span><span class="p">,</span> <span class="s">'int64'</span><span class="p">,</span> <span class="s">'float16'</span><span class="p">,</span> <span class="s">'float32'</span><span class="p">,</span> <span class="s">'float64'</span><span class="p">]</span>
<span class="n">start_mem</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">memory_usage</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span> <span class="o">/</span> <span class="mi">1024</span><span class="o">**</span><span class="mi">2</span>    
<span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="n">col_type</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">dtypes</span>
    <span class="k">if</span> <span class="n">col_type</span> <span class="ow">in</span> <span class="n">numerics</span><span class="p">:</span>
        <span class="n">c_min</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">min</span><span class="p">()</span>
        <span class="n">c_max</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">max</span><span class="p">()</span>
        <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">col_type</span><span class="p">)[:</span><span class="mi">3</span><span class="p">]</span> <span class="o">==</span> <span class="s">'int'</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">c_min</span> <span class="o">&gt;</span> <span class="n">np</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int8</span><span class="p">)</span><span class="o">.</span><span class="nb">min</span> <span class="ow">and</span> <span class="n">c_max</span> <span class="o">&lt;</span> <span class="n">np</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int8</span><span class="p">)</span><span class="o">.</span><span class="nb">max</span><span class="p">:</span>
                <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int8</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">c_min</span> <span class="o">&gt;</span> <span class="n">np</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int16</span><span class="p">)</span><span class="o">.</span><span class="nb">min</span> <span class="ow">and</span> <span class="n">c_max</span> <span class="o">&lt;</span> <span class="n">np</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int16</span><span class="p">)</span><span class="o">.</span><span class="nb">max</span><span class="p">:</span>
                <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int16</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">c_min</span> <span class="o">&gt;</span> <span class="n">np</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">)</span><span class="o">.</span><span class="nb">min</span> <span class="ow">and</span> <span class="n">c_max</span> <span class="o">&lt;</span> <span class="n">np</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">)</span><span class="o">.</span><span class="nb">max</span><span class="p">:</span>
                <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">c_min</span> <span class="o">&gt;</span> <span class="n">np</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int64</span><span class="p">)</span><span class="o">.</span><span class="nb">min</span> <span class="ow">and</span> <span class="n">c_max</span> <span class="o">&lt;</span> <span class="n">np</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int64</span><span class="p">)</span><span class="o">.</span><span class="nb">max</span><span class="p">:</span>
                <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int64</span><span class="p">)</span>  
        <span class="k">else</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">c_min</span> <span class="o">&gt;</span> <span class="n">np</span><span class="o">.</span><span class="n">finfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float16</span><span class="p">)</span><span class="o">.</span><span class="nb">min</span> <span class="ow">and</span> <span class="n">c_max</span> <span class="o">&lt;</span> <span class="n">np</span><span class="o">.</span><span class="n">finfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float16</span><span class="p">)</span><span class="o">.</span><span class="nb">max</span><span class="p">:</span>
                <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float16</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">c_min</span> <span class="o">&gt;</span> <span class="n">np</span><span class="o">.</span><span class="n">finfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span><span class="o">.</span><span class="nb">min</span> <span class="ow">and</span> <span class="n">c_max</span> <span class="o">&lt;</span> <span class="n">np</span><span class="o">.</span><span class="n">finfo</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span><span class="o">.</span><span class="nb">max</span><span class="p">:</span>
                <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>    
<span class="n">end_mem</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">memory_usage</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span> <span class="o">/</span> <span class="mi">1024</span><span class="o">**</span><span class="mi">2</span>
<span class="k">if</span> <span class="n">verbose</span><span class="p">:</span> <span class="k">print</span><span class="p">(</span><span class="s">'Mem. usage decreased to {:5.2f} Mb ({:.1f}</span><span class="si">% </span><span class="s">reduction)'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">end_mem</span><span class="p">,</span> <span class="mi">100</span> <span class="o">*</span> <span class="p">(</span><span class="n">start_mem</span> <span class="o">-</span> <span class="n">end_mem</span><span class="p">)</span> <span class="o">/</span> <span class="n">start_mem</span><span class="p">))</span>
<span class="k">return</span> <span class="n">df</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="冗余特征">冗余特征</h2>
<p>去除变化小，缺失值太多，极端分布特征</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="n">one_value_cols</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">train</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="n">train</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">]</span>
<span class="n">one_value_cols_test</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">test</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="n">test</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">]</span>

<span class="n">many_null_cols</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">train</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="n">train</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">isnull</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span> <span class="o">/</span> <span class="n">train</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">0.95</span><span class="p">]</span>
<span class="n">many_null_cols_test</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">test</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="n">test</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">isnull</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span> <span class="o">/</span> <span class="n">test</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">0.95</span><span class="p">]</span>

<span class="n">big_top_value_cols</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">train</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="n">train</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">dropna</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">normalize</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">0.95</span><span class="p">]</span>
<span class="n">big_top_value_cols_test</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">test</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="n">test</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">dropna</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">normalize</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">0.95</span><span class="p">]</span>

<span class="n">cols_to_drop</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">one_value_cols</span> <span class="o">+</span> <span class="n">one_value_cols_test</span> <span class="o">+</span> <span class="n">many_null_cols</span> <span class="o">+</span> <span class="n">many_null_cols_test</span> <span class="o">+</span> <span class="n">big_top_value_cols</span> <span class="o">+</span> \
                        <span class="n">big_top_value_cols_test</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="相关性分析">相关性分析</h2>
<p>观察哪些变量之间有相关性<a href="https://www.kaggle.com/cdeotte/eda-for-columns-v-and-id">link</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">make_corr</span><span class="p">(</span><span class="n">Vs</span><span class="p">,</span><span class="n">Vtitle</span><span class="o">=</span><span class="s">''</span><span class="p">):</span>
    <span class="n">cols</span> <span class="o">=</span> <span class="p">[</span><span class="s">'TransactionDT'</span><span class="p">]</span> <span class="o">+</span> <span class="n">Vs</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">15</span><span class="p">))</span>
    <span class="n">sns</span><span class="o">.</span><span class="n">heatmap</span><span class="p">(</span><span class="n">train</span><span class="p">[</span><span class="n">cols</span><span class="p">]</span><span class="o">.</span><span class="n">corr</span><span class="p">(),</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'RdBu_r'</span><span class="p">,</span> <span class="n">annot</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="mf">0.0</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">Vtitle</span><span class="o">!=</span><span class="s">''</span><span class="p">:</span> 
        <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="n">Vtitle</span><span class="p">,</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span> <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="n">Vs</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s">' - '</span><span class="o">+</span><span class="n">Vs</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="变量分组思想">变量分组思想</h2>
<p>Example:按照nan分组<a href="https://www.kaggle.com/cdeotte/eda-for-columns-v-and-id">link</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="n">nans_df</span> <span class="o">=</span> <span class="n">train</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span>
<span class="n">nans_groups</span><span class="o">=</span><span class="p">{}</span>
<span class="n">i_cols</span> <span class="o">=</span> <span class="p">[</span><span class="s">'V'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">340</span><span class="p">)]</span>
<span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">train</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="n">cur_group</span> <span class="o">=</span> <span class="n">nans_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">nans_groups</span><span class="p">[</span><span class="n">cur_group</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">col</span><span class="p">)</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="n">nans_groups</span><span class="p">[</span><span class="n">cur_group</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="n">col</span><span class="p">]</span>
<span class="k">del</span> <span class="n">nans_df</span><span class="p">;</span> <span class="n">x</span><span class="o">=</span><span class="n">gc</span><span class="o">.</span><span class="n">collect</span><span class="p">()</span>

<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">nans_groups</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'####### NAN count ='</span><span class="p">,</span><span class="n">k</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>分组后再在组内进行相关性分析，按照相关性把变量分到各个子集，在子集内挑选具有代表性的变量，例如unique等。</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="n">grps</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">],[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],[</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">],[</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">],[</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">]]</span>
<span class="k">def</span> <span class="nf">reduce_group</span><span class="p">(</span><span class="n">grps</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="s">'V'</span><span class="p">):</span>
    <span class="n">use</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">g</span> <span class="ow">in</span> <span class="n">grps</span><span class="p">:</span>
        <span class="n">mx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">vx</span> <span class="o">=</span> <span class="n">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        <span class="k">for</span> <span class="n">gg</span> <span class="ow">in</span> <span class="n">g</span><span class="p">:</span>
            <span class="n">n</span> <span class="o">=</span> <span class="n">train</span><span class="p">[</span><span class="n">c</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">gg</span><span class="p">)]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
            <span class="k">if</span> <span class="n">n</span><span class="o">&gt;</span><span class="n">mx</span><span class="p">:</span>
                <span class="n">mx</span> <span class="o">=</span> <span class="n">n</span>
                <span class="n">vx</span> <span class="o">=</span> <span class="n">gg</span>
            <span class="c1">#print(str(gg)+'-'+str(n),', ',end='')
</span>        <span class="n">use</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">vx</span><span class="p">)</span>
        <span class="c1">#print()
</span>    <span class="k">print</span><span class="p">(</span><span class="s">'Use these'</span><span class="p">,</span><span class="n">use</span><span class="p">)</span>
<span class="n">reduce_group</span><span class="p">(</span><span class="n">grps</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="图形分布">图形分布</h2>
<p>借助pandas和seaborn可快速绘制优美图形<br />
Example 1：直接通过DataFrame.plot绘图</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">df_train</span><span class="p">[</span><span class="s">'TransactionAmt'</span><span class="p">]</span><span class="o">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'hist'</span><span class="p">,</span> <span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span>
                                            <span class="n">title</span><span class="o">=</span><span class="s">'Distribution of Log Transaction Amt'</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><img src="https://raw.githubusercontent.com/robertandhe/MarkDownPhotos/master/2019-10-05-post/eda_fig1.png" alt="eda_fig1" />
Example 2: seaborn绘图</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax1</span><span class="p">,</span> <span class="n">ax2</span><span class="p">)</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">fig</span><span class="o">.</span><span class="n">suptitle</span><span class="p">(</span><span class="s">"Count of transaction and mean of fraud by days and weekday"</span><span class="p">,</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">df_train</span><span class="p">[</span><span class="s">'weekday'</span><span class="p">],</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">)</span>
<span class="n">ax1t</span> <span class="o">=</span> <span class="n">ax1</span><span class="o">.</span><span class="n">twinx</span><span class="p">()</span>
<span class="n">perc_fraud_weekday</span> <span class="o">=</span> <span class="n">df_train</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'weekday'</span><span class="p">)[</span><span class="s">'isFraud'</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">perc_fraud_weekday</span> <span class="o">=</span> <span class="n">perc_fraud_weekday</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">sns</span><span class="o">.</span><span class="n">pointplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'weekday'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'isFraud'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">perc_fraud_weekday</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax1t</span><span class="p">)</span>
<span class="n">ax1t</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">])</span>
<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">df_train</span><span class="p">[</span><span class="s">'days'</span><span class="p">],</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">)</span>
<span class="n">ax2t</span> <span class="o">=</span> <span class="n">ax2</span><span class="o">.</span><span class="n">twinx</span><span class="p">()</span>
<span class="n">perc_fraud_days</span> <span class="o">=</span> <span class="n">df_train</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'days'</span><span class="p">)[</span><span class="s">'isFraud'</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">perc_fraud_days</span> <span class="o">=</span> <span class="n">perc_fraud_days</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">sns</span><span class="o">.</span><span class="n">pointplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'days'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'isFraud'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">perc_fraud_days</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax2t</span><span class="p">)</span>
<span class="n">ax2t</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">])</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><img src="https://raw.githubusercontent.com/robertandhe/MarkDownPhotos/master/2019-10-05-post/eda_fig2.png" alt="eda_fig2" />
Example 3:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">df_train</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'ProductCD'</span><span class="p">)[</span><span class="s">'TransactionID'</span><span class="p">]</span><span class="o">.</span><span class="n">count</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'ProductCD'</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">'barh'</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">color</span><span class="o">=</span><span class="n">color_pal</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="s">'Count of Observations by ProductCD'</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><img src="https://raw.githubusercontent.com/robertandhe/MarkDownPhotos/master/2019-10-05-post/eda_fig3.png" alt="eda_fig3" />
其余常用函数为distplot, barplot, countplot, boxplot, violinplot</p>
<h2 id="异常值">异常值</h2>
<p>Example 1：quantile函数</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">df_train</span><span class="p">[[</span><span class="s">'card1'</span><span class="p">,</span> <span class="s">'card2'</span><span class="p">,</span> <span class="s">'card3'</span><span class="p">,</span> <span class="s">'card5'</span><span class="p">]]</span><span class="o">.</span><span class="n">quantile</span><span class="p">([</span><span class="mf">.1</span><span class="p">,</span> <span class="mf">.25</span><span class="p">,</span> <span class="mf">.5</span><span class="p">,</span> <span class="mf">.75</span><span class="p">,</span> <span class="mf">.9</span><span class="p">,</span> <span class="mf">.99</span><span class="p">])</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Example 2： 箱线图</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">sns</span><span class="o">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'DT_M'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'D2'</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'isFraud'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">train_df</span><span class="p">,</span> <span class="n">palette</span><span class="o">=</span><span class="s">'hls'</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><img src="https://raw.githubusercontent.com/robertandhe/MarkDownPhotos/master/2019-10-05-post/eda_fig4.png" alt="eda_fig4" /></p>
<h2 id="缺失值">缺失值</h2>
<p>数值型特征一般用均值，加权均值，中位数填充；分类特征一般可用众数填充。<br />
在比赛中，lightgbm自身可对缺失值较好处理，故仅对card2-card6进行众数填充，用于后面构造虚拟身份特征。</p>
<h2 id="后处理">后处理</h2>
<p>玄学！ 
在IEEE-Fraud-Detection比赛中，关键在于识别欺诈客户，而不是欺诈交易。所以最终预测结果中，同一客户应该具有相同的
欺诈概率值,取所有预测概率值的平均或者分位数。</p>
<h2 id="特征工程函数">特征工程函数</h2>
<p>values_normalization</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">values_normalization</span><span class="p">(</span><span class="n">dt_df</span><span class="p">,</span> <span class="n">periods</span><span class="p">,</span> <span class="n">columns</span><span class="p">,</span> <span class="n">enc_type</span><span class="o">=</span><span class="s">'both'</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">period</span> <span class="ow">in</span> <span class="n">periods</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">columns</span><span class="p">:</span>
            <span class="n">new_col</span> <span class="o">=</span> <span class="n">col</span> <span class="o">+</span><span class="s">'_'</span><span class="o">+</span> <span class="n">period</span>
            <span class="n">dt_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">dt_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">)</span>  

            <span class="n">temp_min</span> <span class="o">=</span> <span class="n">dt_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="n">period</span><span class="p">])[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">agg</span><span class="p">([</span><span class="s">'min'</span><span class="p">])</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
            <span class="n">temp_min</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">temp_min</span><span class="p">[</span><span class="n">period</span><span class="p">]</span><span class="o">.</span><span class="n">values</span>
            <span class="n">temp_min</span> <span class="o">=</span> <span class="n">temp_min</span><span class="p">[</span><span class="s">'min'</span><span class="p">]</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>

            <span class="n">temp_max</span> <span class="o">=</span> <span class="n">dt_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="n">period</span><span class="p">])[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">agg</span><span class="p">([</span><span class="s">'max'</span><span class="p">])</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
            <span class="n">temp_max</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">temp_max</span><span class="p">[</span><span class="n">period</span><span class="p">]</span><span class="o">.</span><span class="n">values</span>
            <span class="n">temp_max</span> <span class="o">=</span> <span class="n">temp_max</span><span class="p">[</span><span class="s">'max'</span><span class="p">]</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>

            <span class="n">temp_mean</span> <span class="o">=</span> <span class="n">dt_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="n">period</span><span class="p">])[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">agg</span><span class="p">([</span><span class="s">'mean'</span><span class="p">])</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
            <span class="n">temp_mean</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">temp_mean</span><span class="p">[</span><span class="n">period</span><span class="p">]</span><span class="o">.</span><span class="n">values</span>
            <span class="n">temp_mean</span> <span class="o">=</span> <span class="n">temp_mean</span><span class="p">[</span><span class="s">'mean'</span><span class="p">]</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>

            <span class="n">temp_std</span> <span class="o">=</span> <span class="n">dt_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="n">period</span><span class="p">])[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">agg</span><span class="p">([</span><span class="s">'std'</span><span class="p">])</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
            <span class="n">temp_std</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">temp_std</span><span class="p">[</span><span class="n">period</span><span class="p">]</span><span class="o">.</span><span class="n">values</span>
            <span class="n">temp_std</span> <span class="o">=</span> <span class="n">temp_std</span><span class="p">[</span><span class="s">'std'</span><span class="p">]</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>

            <span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_min'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dt_df</span><span class="p">[</span><span class="n">period</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">temp_min</span><span class="p">)</span>
            <span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_max'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dt_df</span><span class="p">[</span><span class="n">period</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">temp_max</span><span class="p">)</span>
            <span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_mean'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dt_df</span><span class="p">[</span><span class="n">period</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">temp_mean</span><span class="p">)</span>
            <span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_std'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dt_df</span><span class="p">[</span><span class="n">period</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">temp_std</span><span class="p">)</span>
            
            <span class="k">if</span> <span class="n">enc_type</span><span class="o">==</span><span class="s">'both'</span><span class="p">:</span>
                <span class="n">dt_df</span><span class="p">[</span><span class="n">new_col</span><span class="o">+</span><span class="s">'_min_max'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">dt_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">-</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_min'</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_max'</span><span class="p">]</span><span class="o">-</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_min'</span><span class="p">])</span>
                <span class="n">dt_df</span><span class="p">[</span><span class="n">new_col</span><span class="o">+</span><span class="s">'_std_score'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">dt_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">-</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_mean'</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_std'</span><span class="p">])</span>
            <span class="k">elif</span> <span class="n">enc_type</span><span class="o">==</span><span class="s">'norm'</span><span class="p">:</span>
                 <span class="n">dt_df</span><span class="p">[</span><span class="n">new_col</span><span class="o">+</span><span class="s">'_std_score'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">dt_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">-</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_mean'</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_std'</span><span class="p">])</span>
            <span class="k">elif</span> <span class="n">enc_type</span><span class="o">==</span><span class="s">'min_max'</span><span class="p">:</span>
                <span class="n">dt_df</span><span class="p">[</span><span class="n">new_col</span><span class="o">+</span><span class="s">'_min_max'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">dt_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">-</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_min'</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_max'</span><span class="p">]</span><span class="o">-</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_min'</span><span class="p">])</span>

            <span class="k">del</span> <span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_min'</span><span class="p">],</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_max'</span><span class="p">],</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_mean'</span><span class="p">],</span><span class="n">dt_df</span><span class="p">[</span><span class="s">'temp_std'</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">dt_df</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>frequency encoding</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">encode_FE</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">cols</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">cols</span><span class="p">:</span>
        <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">[</span><span class="n">col</span><span class="p">],</span><span class="n">df2</span><span class="p">[</span><span class="n">col</span><span class="p">]])</span>
        <span class="n">vc</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">dropna</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">normalize</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>
        <span class="n">vc</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
        <span class="n">nm</span> <span class="o">=</span> <span class="n">col</span><span class="o">+</span><span class="s">'_FE'</span>
        <span class="n">df1</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">vc</span><span class="p">)</span>
        <span class="n">df1</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span>
        <span class="n">df2</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">vc</span><span class="p">)</span>
        <span class="n">df2</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">nm</span><span class="p">,</span><span class="s">', '</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>label encoding</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">encode_LE</span><span class="p">(</span><span class="n">col</span><span class="p">,</span><span class="n">train</span><span class="o">=</span><span class="n">X_train</span><span class="p">,</span><span class="n">test</span><span class="o">=</span><span class="n">X_test</span><span class="p">,</span><span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
    <span class="n">df_comb</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">train</span><span class="p">[</span><span class="n">col</span><span class="p">],</span><span class="n">test</span><span class="p">[</span><span class="n">col</span><span class="p">]],</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">df_comb</span><span class="p">,</span><span class="n">_</span> <span class="o">=</span> <span class="n">df_comb</span><span class="o">.</span><span class="n">factorize</span><span class="p">(</span><span class="n">sort</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">nm</span> <span class="o">=</span> <span class="n">col</span>
    <span class="k">if</span> <span class="n">df_comb</span><span class="o">.</span><span class="nb">max</span><span class="p">()</span><span class="o">&gt;</span><span class="mi">32000</span><span class="p">:</span> 
        <span class="n">train</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_comb</span><span class="p">[:</span><span class="nb">len</span><span class="p">(</span><span class="n">train</span><span class="p">)]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'int32'</span><span class="p">)</span>
        <span class="n">test</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_comb</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">train</span><span class="p">):]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'int32'</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">train</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_comb</span><span class="p">[:</span><span class="nb">len</span><span class="p">(</span><span class="n">train</span><span class="p">)]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'int16'</span><span class="p">)</span>
        <span class="n">test</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_comb</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">train</span><span class="p">):]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'int16'</span><span class="p">)</span>
    <span class="k">del</span> <span class="n">df_comb</span><span class="p">;</span> <span class="n">x</span><span class="o">=</span><span class="n">gc</span><span class="o">.</span><span class="n">collect</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">verbose</span><span class="p">:</span> <span class="k">print</span><span class="p">(</span><span class="n">nm</span><span class="p">,</span><span class="s">', '</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>group aggregation</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">encode_AG</span><span class="p">(</span><span class="n">main_columns</span><span class="p">,</span> <span class="n">uids</span><span class="p">,</span> <span class="n">aggregations</span><span class="o">=</span><span class="p">[</span><span class="s">'mean'</span><span class="p">],</span> <span class="n">train_df</span><span class="o">=</span><span class="n">X_train</span><span class="p">,</span> <span class="n">test_df</span><span class="o">=</span><span class="n">X_test</span><span class="p">,</span> 
              <span class="n">fillna</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">usena</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
    <span class="c1"># AGGREGATION OF MAIN WITH UID FOR GIVEN STATISTICS
</span>    <span class="k">for</span> <span class="n">main_column</span> <span class="ow">in</span> <span class="n">main_columns</span><span class="p">:</span>  
        <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">uids</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">agg_type</span> <span class="ow">in</span> <span class="n">aggregations</span><span class="p">:</span>
                <span class="n">new_col_name</span> <span class="o">=</span> <span class="n">main_column</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="n">col</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="n">agg_type</span>
                <span class="n">temp_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">train_df</span><span class="p">[[</span><span class="n">col</span><span class="p">,</span> <span class="n">main_column</span><span class="p">]],</span> <span class="n">test_df</span><span class="p">[[</span><span class="n">col</span><span class="p">,</span><span class="n">main_column</span><span class="p">]]])</span>
                <span class="k">if</span> <span class="n">usena</span><span class="p">:</span> <span class="n">temp_df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">temp_df</span><span class="p">[</span><span class="n">main_column</span><span class="p">]</span><span class="o">==-</span><span class="mi">1</span><span class="p">,</span><span class="n">main_column</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span>
                <span class="n">temp_df</span> <span class="o">=</span> <span class="n">temp_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="n">col</span><span class="p">])[</span><span class="n">main_column</span><span class="p">]</span><span class="o">.</span><span class="n">agg</span><span class="p">([</span><span class="n">agg_type</span><span class="p">])</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span>
                                                        <span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="n">agg_type</span><span class="p">:</span> <span class="n">new_col_name</span><span class="p">})</span>

                <span class="n">temp_df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">temp_df</span><span class="p">[</span><span class="n">col</span><span class="p">])</span>
                <span class="n">temp_df</span> <span class="o">=</span> <span class="n">temp_df</span><span class="p">[</span><span class="n">new_col_name</span><span class="p">]</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>   

                <span class="n">train_df</span><span class="p">[</span><span class="n">new_col_name</span><span class="p">]</span> <span class="o">=</span> <span class="n">train_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">temp_df</span><span class="p">)</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span>
                <span class="n">test_df</span><span class="p">[</span><span class="n">new_col_name</span><span class="p">]</span>  <span class="o">=</span> <span class="n">test_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">temp_df</span><span class="p">)</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span>
                
                <span class="k">if</span> <span class="n">fillna</span><span class="p">:</span>
                    <span class="n">train_df</span><span class="p">[</span><span class="n">new_col_name</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
                    <span class="n">test_df</span><span class="p">[</span><span class="n">new_col_name</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
                
                <span class="k">print</span><span class="p">(</span><span class="s">"'"</span><span class="o">+</span><span class="n">new_col_name</span><span class="o">+</span><span class="s">"'"</span><span class="p">,</span><span class="s">', '</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>combine features</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">encode_CB</span><span class="p">(</span><span class="n">col1</span><span class="p">,</span><span class="n">col2</span><span class="p">,</span><span class="n">df1</span><span class="o">=</span><span class="n">X_train</span><span class="p">,</span><span class="n">df2</span><span class="o">=</span><span class="n">X_test</span><span class="p">):</span>
    <span class="n">nm</span> <span class="o">=</span> <span class="n">col1</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="n">col2</span>
    <span class="n">df1</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="n">col1</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="n">df1</span><span class="p">[</span><span class="n">col2</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
    <span class="n">df2</span><span class="p">[</span><span class="n">nm</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="n">col1</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="n">df2</span><span class="p">[</span><span class="n">col2</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span> 
    <span class="n">encode_LE</span><span class="p">(</span><span class="n">nm</span><span class="p">,</span><span class="n">verbose</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">nm</span><span class="p">,</span><span class="s">', '</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>group aggregation nunique</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">encode_AG2</span><span class="p">(</span><span class="n">main_columns</span><span class="p">,</span> <span class="n">uids</span><span class="p">,</span> <span class="n">train_df</span><span class="o">=</span><span class="n">X_train</span><span class="p">,</span> <span class="n">test_df</span><span class="o">=</span><span class="n">X_test</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">main_column</span> <span class="ow">in</span> <span class="n">main_columns</span><span class="p">:</span>  
        <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">uids</span><span class="p">:</span>
            <span class="n">comb</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">train_df</span><span class="p">[[</span><span class="n">col</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="n">main_column</span><span class="p">]],</span><span class="n">test_df</span><span class="p">[[</span><span class="n">col</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="n">main_column</span><span class="p">]]],</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
            <span class="n">mp</span> <span class="o">=</span> <span class="n">comb</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">col</span><span class="p">)[</span><span class="n">main_column</span><span class="p">]</span><span class="o">.</span><span class="n">agg</span><span class="p">([</span><span class="s">'nunique'</span><span class="p">])[</span><span class="s">'nunique'</span><span class="p">]</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>
            <span class="n">train_df</span><span class="p">[</span><span class="n">col</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="n">main_column</span><span class="o">+</span><span class="s">'_ct'</span><span class="p">]</span> <span class="o">=</span> <span class="n">train_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">mp</span><span class="p">)</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span>
            <span class="n">test_df</span><span class="p">[</span><span class="n">col</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="n">main_column</span><span class="o">+</span><span class="s">'_ct'</span><span class="p">]</span> <span class="o">=</span> <span class="n">test_df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="n">mp</span><span class="p">)</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="n">col</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="n">main_column</span><span class="o">+</span><span class="s">'_ct, '</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="lightgbm">lightgbm</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
</pre></td><td class="rouge-code"><pre><span class="n">lgb_params</span> <span class="o">=</span> <span class="p">{</span>
                <span class="s">'objective'</span><span class="p">:</span><span class="s">'binary'</span><span class="p">,</span>
                <span class="s">'boosting_type'</span><span class="p">:</span><span class="s">'gbdt'</span><span class="p">,</span>
                <span class="s">'metric'</span><span class="p">:</span><span class="s">'auc'</span><span class="p">,</span>
                <span class="s">'n_jobs'</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span>
                <span class="s">'learning_rate'</span><span class="p">:</span><span class="mf">0.01</span><span class="p">,</span>
                <span class="s">'num_leaves'</span><span class="p">:</span> <span class="mi">2</span><span class="o">**</span><span class="mi">8</span><span class="p">,</span>
                <span class="s">'max_depth'</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span>
                <span class="s">'tree_learner'</span><span class="p">:</span><span class="s">'serial'</span><span class="p">,</span>
                <span class="s">'colsample_bytree'</span><span class="p">:</span> <span class="mf">0.7</span><span class="p">,</span>
                <span class="s">'subsample_freq'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span>
                <span class="s">'subsample'</span><span class="p">:</span><span class="mf">0.7</span><span class="p">,</span>
                <span class="s">'n_estimators'</span><span class="p">:</span><span class="mi">80000</span><span class="p">,</span>
                <span class="s">'max_bin'</span><span class="p">:</span><span class="mi">255</span><span class="p">,</span>
                <span class="s">'verbose'</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span>
                <span class="s">'seed'</span><span class="p">:</span> <span class="n">SEED</span><span class="p">,</span>
                <span class="s">'early_stopping_rounds'</span><span class="p">:</span><span class="mi">100</span><span class="p">,</span> 
        <span class="p">}</span> 

<span class="k">def</span> <span class="nf">make_predictions</span><span class="p">(</span><span class="n">tr_df</span><span class="p">,</span> <span class="n">tt_df</span><span class="p">,</span> <span class="n">features_columns</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">lgb_params</span><span class="p">,</span> <span class="n">NFOLDS</span><span class="o">=</span><span class="mi">2</span><span class="p">):</span>
    <span class="n">folds</span> <span class="o">=</span> <span class="n">KFold</span><span class="p">(</span><span class="n">n_splits</span><span class="o">=</span><span class="n">NFOLDS</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="n">SEED</span><span class="p">)</span>

    <span class="n">X</span><span class="p">,</span><span class="n">y</span> <span class="o">=</span> <span class="n">tr_df</span><span class="p">[</span><span class="n">features_columns</span><span class="p">],</span> <span class="n">tr_df</span><span class="p">[</span><span class="n">target</span><span class="p">]</span>    
    <span class="n">P</span><span class="p">,</span><span class="n">P_y</span> <span class="o">=</span> <span class="n">tt_df</span><span class="p">[</span><span class="n">features_columns</span><span class="p">],</span> <span class="n">tt_df</span><span class="p">[</span><span class="n">target</span><span class="p">]</span>  

    <span class="n">tt_df</span> <span class="o">=</span> <span class="n">tt_df</span><span class="p">[[</span><span class="s">'TransactionID'</span><span class="p">,</span><span class="n">target</span><span class="p">]]</span>    
    <span class="n">predictions</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">tt_df</span><span class="p">))</span>
    
    <span class="k">for</span> <span class="n">fold_</span><span class="p">,</span> <span class="p">(</span><span class="n">trn_idx</span><span class="p">,</span> <span class="n">val_idx</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">folds</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">)):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'Fold:'</span><span class="p">,</span><span class="n">fold_</span><span class="p">)</span>
        <span class="n">tr_x</span><span class="p">,</span> <span class="n">tr_y</span> <span class="o">=</span> <span class="n">X</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">trn_idx</span><span class="p">,:],</span> <span class="n">y</span><span class="p">[</span><span class="n">trn_idx</span><span class="p">]</span>
        <span class="n">vl_x</span><span class="p">,</span> <span class="n">vl_y</span> <span class="o">=</span> <span class="n">X</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">val_idx</span><span class="p">,:],</span> <span class="n">y</span><span class="p">[</span><span class="n">val_idx</span><span class="p">]</span>
            
        <span class="k">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">tr_x</span><span class="p">),</span><span class="nb">len</span><span class="p">(</span><span class="n">vl_x</span><span class="p">))</span>
        <span class="n">tr_data</span> <span class="o">=</span> <span class="n">lgb</span><span class="o">.</span><span class="n">Dataset</span><span class="p">(</span><span class="n">tr_x</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">tr_y</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">LOCAL_TEST</span><span class="p">:</span>
            <span class="n">vl_data</span> <span class="o">=</span> <span class="n">lgb</span><span class="o">.</span><span class="n">Dataset</span><span class="p">(</span><span class="n">P</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">P_y</span><span class="p">)</span> 
        <span class="k">else</span><span class="p">:</span>
            <span class="n">vl_data</span> <span class="o">=</span> <span class="n">lgb</span><span class="o">.</span><span class="n">Dataset</span><span class="p">(</span><span class="n">vl_x</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">vl_y</span><span class="p">)</span>  

        <span class="n">estimator</span> <span class="o">=</span> <span class="n">lgb</span><span class="o">.</span><span class="n">train</span><span class="p">(</span>
            <span class="n">lgb_params</span><span class="p">,</span>
            <span class="n">tr_data</span><span class="p">,</span>
            <span class="n">valid_sets</span> <span class="o">=</span> <span class="p">[</span><span class="n">tr_data</span><span class="p">,</span> <span class="n">vl_data</span><span class="p">],</span>
            <span class="n">verbose_eval</span> <span class="o">=</span> <span class="mi">200</span><span class="p">,</span>
        <span class="p">)</span>   
        
        <span class="n">pp_p</span> <span class="o">=</span> <span class="n">estimator</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">P</span><span class="p">)</span>
        <span class="n">predictions</span> <span class="o">+=</span> <span class="n">pp_p</span><span class="o">/</span><span class="n">NFOLDS</span>

        <span class="k">if</span> <span class="n">LOCAL_TEST</span><span class="p">:</span>
            <span class="n">feature_imp</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">estimator</span><span class="o">.</span><span class="n">feature_importance</span><span class="p">(),</span><span class="n">X</span><span class="o">.</span><span class="n">columns</span><span class="p">)),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Value'</span><span class="p">,</span><span class="s">'Feature'</span><span class="p">])</span>
            <span class="k">print</span><span class="p">(</span><span class="n">feature_imp</span><span class="p">)</span>
        
        <span class="k">del</span> <span class="n">tr_x</span><span class="p">,</span> <span class="n">tr_y</span><span class="p">,</span> <span class="n">vl_x</span><span class="p">,</span> <span class="n">vl_y</span><span class="p">,</span> <span class="n">tr_data</span><span class="p">,</span> <span class="n">vl_data</span>
        <span class="n">gc</span><span class="o">.</span><span class="n">collect</span><span class="p">()</span>
        
    <span class="n">tt_df</span><span class="p">[</span><span class="s">'prediction'</span><span class="p">]</span> <span class="o">=</span> <span class="n">predictions</span>
    
    <span class="k">return</span> <span class="n">tt_df</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="xgboost">xgboost</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td><td class="rouge-code"><pre><span class="n">oof</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">X_train</span><span class="p">))</span>
<span class="n">preds</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">X_test</span><span class="p">))</span>

<span class="n">clf</span> <span class="o">=</span> <span class="n">xgb</span><span class="o">.</span><span class="n">XGBClassifier</span><span class="p">(</span> 
    <span class="n">n_estimators</span><span class="o">=</span><span class="mi">2000</span><span class="p">,</span>
    <span class="n">max_depth</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span> 
    <span class="n">learning_rate</span><span class="o">=</span><span class="mf">0.02</span><span class="p">,</span> 
    <span class="n">subsample</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
    <span class="n">colsample_bytree</span><span class="o">=</span><span class="mf">0.4</span><span class="p">,</span> 
    <span class="n">missing</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span> 
    <span class="n">eval_metric</span><span class="o">=</span><span class="s">'auc'</span><span class="p">,</span>
    <span class="c1"># USE CPU
</span>    <span class="c1">#nthread=4,
</span>    <span class="c1">#tree_method='hist' 
</span>    <span class="c1"># USE GPU
</span>    <span class="n">tree_method</span><span class="o">=</span><span class="s">'gpu_hist'</span> 
<span class="p">)</span>

<span class="n">h</span> <span class="o">=</span> <span class="n">clf</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idxT</span><span class="p">,</span><span class="n">cols</span><span class="p">],</span> <span class="n">y_train</span><span class="p">[</span><span class="n">idxT</span><span class="p">],</span> 
    <span class="n">eval_set</span><span class="o">=</span><span class="p">[(</span><span class="n">X_train</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idxV</span><span class="p">,</span><span class="n">cols</span><span class="p">],</span><span class="n">y_train</span><span class="p">[</span><span class="n">idxV</span><span class="p">])],</span>
    <span class="n">verbose</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">early_stopping_rounds</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>

<span class="n">oof</span><span class="p">[</span><span class="n">idxV</span><span class="p">]</span> <span class="o">+=</span> <span class="n">clf</span><span class="o">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">X_train</span><span class="p">[</span><span class="n">cols</span><span class="p">]</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">idxV</span><span class="p">])[:,</span><span class="mi">1</span><span class="p">]</span>
<span class="n">preds</span> <span class="o">+=</span> <span class="n">clf</span><span class="o">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">X_test</span><span class="p">[</span><span class="n">cols</span><span class="p">])[:,</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="n">skf</span><span class="o">.</span><span class="n">n_splits</span>

<span class="n">feature_imp</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">clf</span><span class="o">.</span><span class="n">feature_importances_</span><span class="p">,</span><span class="n">cols</span><span class="p">)),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Value'</span><span class="p">,</span><span class="s">'Feature'</span><span class="p">])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">"Value"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Feature"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">feature_imp</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">"Value"</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:</span><span class="mi">50</span><span class="p">])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'XGB95 Most Important Features'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET