I"~D<h1 id="问题描述">问题描述</h1>
<p>Given a string <code class="highlighter-rouge">S</code>, check if the letters can be rearranged so that two characters that are adjacent to each other are not the same.</p>

<p>If possible, output any possible result.  If not possible, return the empty string.</p>
<h3 id="example-1">Example 1:</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nl">Input:</span> <span class="n">S</span> <span class="o">=</span> <span class="s">"aab"</span>
<span class="n">Output</span><span class="o">:</span> <span class="s">"aba"</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="example-2">Example 2:</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nl">Input:</span> <span class="n">S</span> <span class="o">=</span> <span class="s">"aaab"</span>
<span class="n">Output</span><span class="o">:</span> <span class="s">""</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="note">Note:</h3>
<ul>
  <li><code class="highlighter-rouge">S</code> will consist of lowercase letters and have length in range <code class="highlighter-rouge">[1, 500]</code>.</li>
</ul>

<h1 id="解法">解法</h1>
<h2 id="解法1">解法1</h2>
<p>题目要求重组字符串是相邻字符不相同。很明显应该用hash table统计字符出现次数，在重组时按照出现次数最多的字符优先排的原则来重组。但是hash table按照value排序略显复杂，所以借助priority queue来排序。这里有个技巧，每次抽出前两个出现次数最多的字符，因为这样取产生的字符串肯定是符合题目要求的，如果每次只取一个次数最多的字符，可能出现重复抽取。然后在构造hash table时如果某个字符出现次数超过原始字符串长度一半则返回空字符串。</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="rouge-code"><pre><span class="n">string</span> <span class="nf">reorganizeString</span><span class="p">(</span><span class="n">string</span> <span class="n">S</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">string</span> <span class="n">res</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
	<span class="n">unordered_map</span><span class="o">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">m</span><span class="p">;</span>
	<span class="n">priority_queue</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span><span class="o">&gt;&gt;</span> <span class="n">q</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">char</span><span class="o">&amp;</span><span class="n">c</span> <span class="o">:</span> <span class="n">S</span><span class="p">)</span>
		<span class="o">++</span><span class="n">m</span><span class="p">[</span><span class="n">c</span><span class="p">];</span>
	<span class="k">for</span> <span class="p">(</span><span class="k">auto</span><span class="o">&amp;</span><span class="n">a</span> <span class="o">:</span> <span class="n">m</span><span class="p">){</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">second</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">S</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span> <span class="p">)</span>
			<span class="k">return</span> <span class="s">""</span><span class="p">;</span>
		<span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">a</span><span class="p">.</span><span class="n">second</span><span class="p">,</span> <span class="n">a</span><span class="p">.</span><span class="n">first</span><span class="p">});</span>
	<span class="p">}</span>
	<span class="k">while</span> <span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="p">){</span>
		<span class="k">auto</span> <span class="n">t1</span> <span class="o">=</span> <span class="n">q</span><span class="p">.</span><span class="n">top</span><span class="p">();</span>
		<span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
		<span class="k">auto</span> <span class="n">t2</span> <span class="o">=</span> <span class="n">q</span><span class="p">.</span><span class="n">top</span><span class="p">();</span>
		<span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
		<span class="n">res</span> <span class="o">+=</span> <span class="n">t1</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
		<span class="n">res</span> <span class="o">+=</span> <span class="n">t2</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
		<span class="k">if</span> <span class="p">(</span><span class="o">--</span><span class="n">t1</span><span class="p">.</span><span class="n">first</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
			<span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">t1</span><span class="p">);</span>
		<span class="k">if</span> <span class="p">(</span><span class="o">--</span><span class="n">t2</span><span class="p">.</span><span class="n">first</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
			<span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">t2</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">size</span><span class="p">()){</span>
		<span class="n">res</span> <span class="o">+=</span> <span class="n">q</span><span class="p">.</span><span class="n">top</span><span class="p">().</span><span class="n">second</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>时间复杂度：O(n^2log(n))<br />
空间复杂度：O(n)<br />
runtime: 70.55%<br />
memory usage: 100.00%</p>
<h2 id="解法2">解法2</h2>
<p>因为字符串全是小写字母，可用长度为26的vector来存储，但在重组时需要知道字符和字符次数，这里用了技巧，每出现一次加100，最后加上字符索引，使一个数字同时编码次数和对应的字符（只有26个字符，索引不会超100）。解码是除100就是次数，除100取余加<code class="highlighter-rouge">'a'</code>就是字符。<br />
vector按从小到大排序，先放出现次数少的，第二个技巧就是字符串第二个位置开始放，因为出现次数最多的字符肯定放0位置。如果idx超出长度，则置为0.</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre><span class="n">string</span> <span class="nf">reorganizeString</span><span class="p">(</span><span class="n">string</span> <span class="n">S</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">vec</span><span class="p">(</span><span class="mi">26</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">char</span><span class="o">&amp;</span> <span class="n">c</span> <span class="o">:</span> <span class="n">S</span><span class="p">)</span>
		<span class="n">vec</span><span class="p">[</span><span class="n">c</span> <span class="o">-</span> <span class="sc">'a'</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">100</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">26</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="n">vec</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="n">i</span><span class="p">;</span>
	<span class="n">sort</span><span class="p">(</span><span class="n">vec</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">vec</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
	<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">S</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span><span class="o">&amp;</span> <span class="n">a</span> <span class="o">:</span> <span class="n">vec</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">a</span> <span class="o">/</span> <span class="mi">100</span><span class="p">;</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">t</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
			<span class="k">return</span> <span class="s">""</span><span class="p">;</span>
		<span class="kt">char</span> <span class="n">ch</span> <span class="o">=</span> <span class="sc">'a'</span> <span class="o">+</span> <span class="n">a</span> <span class="o">%</span> <span class="mi">100</span><span class="p">;</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">t</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">idx</span> <span class="o">&gt;=</span> <span class="n">n</span><span class="p">)</span>
				<span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
			<span class="n">S</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">ch</span><span class="p">;</span>
			<span class="n">idx</span> <span class="o">+=</span> <span class="mi">2</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">S</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>时间复杂度：O(n)<br />
空间复杂度：O(1)<br />
runtime: 70.46%<br />
memory usage: 100.00%</p>

<h2 id="解法3">解法3</h2>
<p>和解法2一样，只是vector排序时按照从大到小排，idx从0开始，到末尾时置为1.</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre><span class="n">string</span> <span class="nf">reorganizeString3</span><span class="p">(</span><span class="n">string</span> <span class="n">S</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">vec</span><span class="p">(</span><span class="mi">26</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">char</span><span class="o">&amp;</span> <span class="n">c</span> <span class="o">:</span> <span class="n">S</span><span class="p">)</span>
		<span class="n">vec</span><span class="p">[</span><span class="n">c</span> <span class="o">-</span> <span class="sc">'a'</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">100</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">26</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="n">vec</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="n">i</span><span class="p">;</span>
	<span class="n">sort</span><span class="p">(</span><span class="n">vec</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">vec</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">());</span>
	<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">S</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span><span class="o">&amp;</span> <span class="n">a</span> <span class="o">:</span> <span class="n">vec</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">a</span> <span class="o">/</span> <span class="mi">100</span><span class="p">;</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">t</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
			<span class="k">return</span> <span class="s">""</span><span class="p">;</span>
		<span class="kt">char</span> <span class="n">ch</span> <span class="o">=</span> <span class="sc">'a'</span> <span class="o">+</span> <span class="n">a</span> <span class="o">%</span> <span class="mi">100</span><span class="p">;</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">t</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">idx</span> <span class="o">&gt;=</span> <span class="n">n</span><span class="p">)</span>
				<span class="n">idx</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
			<span class="n">S</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">ch</span><span class="p">;</span>
			<span class="n">idx</span> <span class="o">+=</span> <span class="mi">2</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">S</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>时间复杂度：O(n)<br />
空间复杂度：O(1)<br />
runtime: 100.00%<br />
memory usage: 100.00%</p>
<h1 id="link">link</h1>
<p><a href="https://leetcode.com/problems/reorganize-string/">leetcode-767</a><br />
<a href="https://www.cnblogs.com/grandyang/p/8799483.html">solution</a></p>
:ET