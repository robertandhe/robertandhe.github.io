I":><h1 id="问题描述">问题描述</h1>
<p>Return all <strong>non-negative</strong> integers of length <code class="highlighter-rouge">N</code> such that the absolute difference between every two consecutive digits is <code class="highlighter-rouge">K</code>.</p>

<p>Note that <strong>every</strong> number in the answer <strong>must not</strong> have leading zeros <strong>except</strong> for the number <code class="highlighter-rouge">0</code> itself. For example, <code class="highlighter-rouge">01</code> has one leading zero and is invalid, but <code class="highlighter-rouge">0</code> is valid.</p>

<p>You may return the answer in any order.</p>
<h3 id="example-1">Example 1:</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nl">Input:</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="n">K</span> <span class="o">=</span> <span class="mi">7</span>
<span class="n">Output</span><span class="o">:</span> <span class="p">[</span><span class="mi">181</span><span class="p">,</span><span class="mi">292</span><span class="p">,</span><span class="mi">707</span><span class="p">,</span><span class="mi">818</span><span class="p">,</span><span class="mi">929</span><span class="p">]</span>
<span class="n">Explanation</span><span class="o">:</span> <span class="n">Note</span> <span class="n">that</span> <span class="mo">070</span> <span class="n">is</span> <span class="n">not</span> <span class="n">a</span> <span class="n">valid</span> <span class="n">number</span><span class="p">,</span> <span class="n">because</span> <span class="n">it</span> <span class="n">has</span> <span class="n">leading</span> <span class="n">zeroes</span><span class="p">.</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="example-2">Example 2:</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nl">Input:</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">K</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">Output</span><span class="o">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">34</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">45</span><span class="p">,</span><span class="mi">54</span><span class="p">,</span><span class="mi">56</span><span class="p">,</span><span class="mi">65</span><span class="p">,</span><span class="mi">67</span><span class="p">,</span><span class="mi">76</span><span class="p">,</span><span class="mi">78</span><span class="p">,</span><span class="mi">87</span><span class="p">,</span><span class="mi">89</span><span class="p">,</span><span class="mi">98</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="note">Note:</h3>
<ol>
  <li><code class="highlighter-rouge">1 &lt;= N &lt;= 9</code></li>
  <li><code class="highlighter-rouge">0 &lt;= K &lt;= 9</code></li>
</ol>

<h1 id="解法">解法</h1>
<h2 id="解法-1">解法 1</h2>
<p> 这题要求出所有数字内前后两位差值绝对值为K且长度为N的数组，数字不能有前导0，0除外。<br />
 首先用递归求解，因为递归时可以用向量存储前面那一个位置数值，接下来的数字和它的差的绝对值必须为K。找到差值为K的推入向量，剩余长度减1，进入下层递归即可。如果数组长度达到N，把向量转换为数字存入res。<br />
 这里可能有重复数组，所以递归完要先用set存一下去重，再转为vector返回。</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="rouge-code"><pre><span class="kt">void</span> <span class="nf">helper</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">arr</span><span class="p">,</span> <span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">K</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">res</span><span class="p">)</span>
<span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">N</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
		<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span><span class="o">&amp;</span> <span class="n">a</span> <span class="o">:</span> <span class="n">arr</span><span class="p">)</span>
			<span class="n">sum</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">sum</span> <span class="o">+</span> <span class="n">a</span><span class="p">;</span>
		<span class="n">res</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">sum</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">arr</span><span class="p">.</span><span class="n">back</span><span class="p">()</span> <span class="o">+</span> <span class="n">K</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">){</span>
		<span class="n">arr</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">arr</span><span class="p">.</span><span class="n">back</span><span class="p">()</span> <span class="o">+</span> <span class="n">K</span><span class="p">);</span>
		<span class="n">helper</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">N</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">res</span><span class="p">);</span>
		<span class="n">arr</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
	<span class="p">}</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">arr</span><span class="p">.</span><span class="n">back</span><span class="p">()</span> <span class="o">-</span> <span class="n">K</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">){</span>
		<span class="n">arr</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">arr</span><span class="p">.</span><span class="n">back</span><span class="p">()</span> <span class="o">-</span> <span class="n">K</span><span class="p">);</span>
		<span class="n">helper</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">N</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">res</span><span class="p">);</span>
		<span class="n">arr</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numsSameConsecDiff</span><span class="p">(</span><span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="kt">int</span> <span class="n">K</span><span class="p">)</span> 
<span class="p">{</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">res</span><span class="p">;</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">arr</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">arr</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
		<span class="n">helper</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">N</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">res</span><span class="p">);</span>
		<span class="n">arr</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
	<span class="p">}</span>
		
	<span class="n">set</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">st</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">res</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
	<span class="k">return</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">st</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>runtime: 6.53%<br />
memory usage: 16.67%<br />
 这里还能优化，用一个数存储当前数即可，末尾数字用它对10取余即可得到，重复数字只能在K==0时出现，区分对待一下即可。</p>

<h2 id="解法-2">解法 2</h2>
<p> 动态规划，用res向量存储当前数字，因为数字长度为N，按道理应循环N次，当把res初始化为0-9时用去一位，只用循环N-1次。<br />
 状态转移就是先申请一个新的向量arr，对res中每个数字，对10取余得到末尾数值，再用末尾数字加减K看是否在0-9范围内，如果在就可加到最后位，为了防止出现重复数字，当K==0时，减K就不做了。先导位为0时，加减都不做，直接continue。</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numsSameConsecDiff</span><span class="p">(</span><span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="kt">int</span> <span class="n">K</span><span class="p">)</span> 
<span class="p">{</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">res</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">};</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">arr</span><span class="p">;</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span><span class="o">&amp;</span> <span class="n">num</span> <span class="o">:</span> <span class="n">res</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">num</span> <span class="o">%</span> <span class="mi">10</span><span class="p">)</span>
				<span class="k">continue</span><span class="p">;</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">K</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">){</span>
				<span class="n">arr</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">num</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">num</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">K</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">-</span> <span class="n">K</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">K</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
				<span class="n">arr</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">num</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">num</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">-</span> <span class="n">K</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="n">res</span> <span class="o">=</span> <span class="n">arr</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>runtime:  97.43%<br />
memory usage: 83.33%</p>

<h1 id="link">Link</h1>
<p><a href="https://leetcode.com/problems/numbers-with-same-consecutive-differences/">leetcode-967</a></p>
:ET